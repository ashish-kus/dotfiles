# IF not running intractively, dont do anything.
[[ $- != *i* ]] && return
# [[ -f ~/.welcome_screen ]] && . ~/.welcome_screen

stty -ixon # fixes suspension of terminal on crtl-s

LOC=$HOME/.config/shell
PATHLIST=(
   "$LOC/path"
   "$LOC/func"
   "$LOC/env.conf"
   "$LOC/$(basename $(readlink /proc/$$/exe))/config"
   "$LOC/alias"
)
sourcer(){
    ARR=("$@")
    for i in "${ARR[@]}"
      do
       [ -f $i ] && source $i
       # echo "$i"
      done
}
sourcer ${PATHLIST[@]}

# Check the window size after each command and, if necessary, update the values of LINES and COLUMNS
# Causes bash to append to history instead of overwriting it so if you start a new terminal, you have old session history
PROMPT_COMMAND='history -a' 

 if hash vim 2>/dev/null;then
   export EDITOR='vim'
   if hash nvim 2>/dev/null;then
     export EDITOR='nvim'
     if hash lvim 2>/dev/null;then 
       export EDITOR='lvim'
     fi
   fi
 fi
 alias vim="$EDITOR"


export VISUAL=$EDITOR

export HISTFILE=~/.history
export HISTSIZE=1000
export SAVEHIST=1000
# export HISTFILE=~/.history
unset -f sourcer
shell="$(basename $(readlink /proc/$$/exe))"

 # alias ls='exa -lhF --color=auto --icons --sort=Name --group-directories-first'
 # [[ colorscript ]] && colorscript -r
 
if [ -n "$TMUX" ]; then
    echo "Already inside a tmux session. Exiting."
else
   if tmux has-session -t $USER 1>/dev/null; then
      # Session exists, attach to it
      echo "Attaching to existing session: $USER"
      tmux attach-session -t $USER
  else
      # Session does not exist, create a new one
      echo "Creating new session: $USER"
      tmux new-session -A -s $USER
  fi  
fi   


